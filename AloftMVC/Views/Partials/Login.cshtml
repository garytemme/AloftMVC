@inherits Umbraco.Web.Mvc.UmbracoTemplatePage


@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Umbraco.Web
@using Umbraco.Web.Models
@using Umbraco.Web.Controllers

@{
    var loginModel = new LoginModel();
    loginModel.RedirectUrl = "/";
    var loginStatusModel = Members.GetCurrentLoginStatus();
    var logoutModel = new PostRedirectModel();
    logoutModel.RedirectUrl = "/";

    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("/umbraco_client/ui/jquery.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.min.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.unobtrusive.min.js");
}

@* NOTE: This RenderJsHere code should be put on your main template page where the rest of your script tags are placed *@
@Html.RenderJsHere()

@if (loginStatusModel.IsLoggedIn)
{
    <p>You are currently logged in as @loginStatusModel.Name</p>

    using (Html.BeginUmbracoForm<UmbLoginStatusController>("HandleLogout"))
    {
        <fieldset>
            <button>Logout</button>
        </fieldset>

        @Html.HiddenFor(m => logoutModel.RedirectUrl)
    }
}
else
{
    using (Html.BeginUmbracoForm<UmbLoginController>("HandleLogin"))
    {
        @Html.HiddenFor(m => loginModel.RedirectUrl)

        <div class="form-horizontal">
            <h4>Login</h4>
            <hr />
            @Html.ValidationSummary(true, "Error in form entries", new { @class = "has-warning" })
            <div class="form-group">
                @Html.LabelFor(m => loginModel.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => loginModel.Username, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => loginModel.Username, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => loginModel.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => loginModel.Password, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => loginModel.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button>Login</button>
                </div>
            </div>
        </div>
    }

}


